# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

cybercrime_url = "https://www.cyber.gov.au/acsc/report"

######################## Hardcoded variables ########################
send_feedback = False		# If enabled provides feedback to help improve Cybercrime's webform
test_report = True		# Only disable if you're ready to file a report
feedback_text = "There is no section for service providers who have to report abuse.\n\nPlease add a section so we can actually complete this form properly.\n\nThis is an automated message from your friends at Perthchat.org!"	# Edit this if there's other feedback you wish to give.
description_text = "\n\nReplace \"///HASH///\" with an actual hash symbol.\n\n Please change this webform so we can input hashes in the future."	# This can be emptied if your link contains no special characters
## Details of the Business or Organisation you are reporting on behalf of
australian_business_number = "17 864 931 143"
operating_address = "EDMUND BARTON BUILDING, KINGS AVENUE, BARTON ACT 2600"
website_url = "https://example.org"
first_name = "John"
last_name = "Doe"
gender = "Male"			# Must be either 'Male', 'Female' or 'X'
date_of_birth = "06/08/1991"
phone_number = "0400 123 456"
contact_email = "contact@example.org"
role_in_organisation = "Intrepid Leader"
######################## Hardcoded variables ########################

def sleep():
  time.sleep(0.5)

class TestInitialFormFill():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()

  def feedback(self):
    self.driver.find_element(By.CSS_SELECTOR, ".root-65 > .ms-Button-flexContainer").click()
    sleep()
    element = self.driver.find_element(By.CSS_SELECTOR, "#Rating25-star-0 .ms-RatingStar-back")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    sleep()
    element = self.driver.find_element(By.CSS_SELECTOR, "#Rating25-star-0 .ms-RatingStar-front")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    sleep()
    self.driver.find_element(By.CSS_SELECTOR, "#Rating25-star-0 > .ms-RatingStar-container").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "#Rating28-star-0 .ms-RatingStar-back")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    sleep()
    element = self.driver.find_element(By.CSS_SELECTOR, "#Rating28-star-0 .ms-RatingStar-front")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    sleep()
    self.driver.find_element(By.CSS_SELECTOR, "#Rating28-star-0 > .ms-RatingStar-container").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "#Rating31-star-0 .ms-RatingStar-back")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    sleep()
    element = self.driver.find_element(By.CSS_SELECTOR, "#Rating31-star-0 .ms-RatingStar-front")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    sleep()
    self.driver.find_element(By.CSS_SELECTOR, "#Rating31-star-0 > .ms-RatingStar-container").click()
    sleep()
    self.driver.find_element(By.XPATH, "//textarea[@rows='4']").send_keys(feedback_text)
    # //textarea[@rows='4']
    sleep()
    self.driver.find_element(By.XPATH, "//input[@maxlength='300']").send_keys(contact_email)
    # //input[@maxlength='300']
    sleep()
    self.driver.find_element(By.XPATH, "//span[contains(.,'Submit')]").click()
    # //span[contains(.,'Submit')]
    sleep()
    self.driver.find_element(By.XPATH, "//i[@data-icon-name='Cancel']").click()

  def test_initialFormFill(self):
    self.driver.get(cybercrime_url)
    sleep()
    self.driver.set_window_size(1280, 960)
    time.sleep(3)
    self.driver.find_element(By.CSS_SELECTOR, ".element--container:nth-child(2) h3").click()
    sleep()
    self.driver.find_element(By.CSS_SELECTOR, "#large_org_radio > .element--container:nth-child(3) h3").click()
    sleep()
    self.driver.find_element(By.LINK_TEXT, "Report a cybercrime to the police").click()
    time.sleep(3)
    self.driver.find_element(By.CSS_SELECTOR, ".ms-Button--primary > .ms-Button-flexContainer").click()
    sleep()
    self.driver.find_element(By.CSS_SELECTOR, ".ms-Button--primary > .ms-Button-flexContainer").click()
    sleep()
    self.driver.execute_script("window.scrollTo(0,0)")
    sleep()
    if send_feedback == True:
      FormFill.feedback()
    time.sleep(1)
    self.driver.find_element(By.CSS_SELECTOR, ".section:nth-child(4) div:nth-child(1) > .reportButton-125 .content-129").click()
    sleep()
    self.driver.execute_script("window.scrollTo(0,0)")
    sleep()
    self.driver.find_element(By.XPATH, "//input[contains(@data-testid,'txtEmailSentFrom')]").send_keys("notapplicable@email.com")
    sleep()
    self.driver.find_element(By.XPATH, "//input[contains(@data-testid,'txtEmailSubject')]").send_keys("NOT APPLICABLE")
    sleep()
    self.driver.find_element(By.XPATH, "//input[contains(@data-testid,'txtEmailRecivedThreat')]").send_keys("notapplicable@email.com")
    sleep()
    self.driver.find_element(By.XPATH, "//input[@placeholder='D/M/YYYY']").send_keys("01/01/2000")
    sleep()
    self.driver.find_element(By.CSS_SELECTOR, ".ms-Checkbox:nth-child(8) > .ms-Checkbox-label").click()
    sleep()
    self.driver.find_element(By.XPATH, "//input[@maxlength='30']").send_keys("See linked report.")
    sleep()
    self.driver.find_element(By.XPATH, "//label[contains(.,'No')]").click()
    sleep()
    self.driver.find_element(By.XPATH, "//span[contains(.,'Continue to Description of events')]").click()
    sleep()
    self.driver.execute_script("window.scrollTo(0,0)")
    sleep()
    self.driver.find_element(By.XPATH, "//textarea[contains(@rows,'7')]").send_keys(description_text)
    sleep()
    self.driver.find_element(By.CSS_SELECTOR, ".root-107").click()
    time.sleep(3)
    self.driver.execute_script("window.scrollTo(0,0)")
    sleep()
    self.driver.find_element(By.XPATH, "//input[@data-testid='txtAbn']").send_keys(australian_business_number)
    sleep()
    self.driver.find_element(By.XPATH, "//span[contains(.,'Please select an option')]").click()
    sleep()
    self.driver.find_element(By.XPATH, "//span[contains(.,'Small (0 - 19 employees)')]").click()
    sleep()
    self.driver.find_element(By.XPATH, "//input[@placeholder='Begin typing to search for an address']").send_keys(operating_address)
    time.sleep(2)
    self.driver.find_element(By.XPATH, "//input[@aria-haspopup='listbox']").send_keys(Keys.RETURN)
    sleep()
    self.driver.find_element(By.XPATH, "//input[@data-testid='busWebsiteUrl']").send_keys(website_url)
    sleep()
    self.driver.find_element(By.XPATH, "(//label[contains(.,'Yes')])[1]").click()
    sleep()
    self.driver.find_element(By.XPATH, "//input[@data-testid='txtFirstNamePoc']").send_keys(first_name)
    sleep()
    self.driver.find_element(By.XPATH, "//input[@data-testid='txtLastNamePoc']").send_keys(last_name)
    sleep()
    self.driver.find_element(By.XPATH, "//span[contains(.,'Please select an option')]").click()
    sleep()
    self.driver.find_element(By.XPATH, ("//span[contains(.,'" + gender + "')]")).click()
    sleep()
    self.driver.find_element(By.XPATH, "//input[@placeholder='D/M/YYYY']").send_keys(date_of_birth)
    sleep()
    self.driver.find_element(By.XPATH, "//input[@data-testid='txtContactNumberPoc']").send_keys(phone_number)
    sleep()
    self.driver.find_element(By.XPATH, "//input[@data-testid='txtEmailPoc']").send_keys(contact_email)
    sleep()
    self.driver.find_element(By.XPATH, "//input[@data-testid='txtConfirmEmailPoc']").send_keys(contact_email)
    sleep()
    self.driver.find_element(By.XPATH, "//input[@data-testid='txtRolePoc']").send_keys(role_in_organisation)
    sleep()
    self.driver.find_element(By.XPATH, "//label[contains(.,'Prefer not to say')]").click()
    sleep()
    self.driver.find_element(By.XPATH, "(//label[contains(.,'No')])[3]").click()
    # //label[contains(.,'No')]
    sleep()
    self.driver.find_element(By.XPATH, "//span[contains(.,'Continue to Review and submit')]").click()
    sleep()
    self.driver.execute_script("window.scrollTo(0,1446)")
    sleep()
    if test_report == False:
      self.driver.find_element(By.XPATH, "//span[contains(.,'Submit the report')]").click()
      print("\nReport submitted!")

input("WARNING: DO NOT use this tool if there is an immediate thread to life or risk of harm.\n\nIf this is an emergency please call: 000\n\nIf this is an active terrorist plot please call both:\n - The Cybercrime Hotline on 1300 292 371\n - The National Security Hotline on 1800 123 400\n\nPress [ENTER] to continue.")
report_url = input("\nPlease enter the cloud storage URL link for the uploaded report: ")
description_text = report_url + description_text
FormFill = TestInitialFormFill()
FormFill.setup_method('Firefox')
FormFill.test_initialFormFill()
time.sleep(30)
FormFill.teardown_method('Quit')
